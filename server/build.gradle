import java.nio.file.Files

plugins {
    id 'application'
    id 'org.hidetake.ssh' version '2.9.0'
}

applicationDefaultJvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005','-Dlog4j2.formatMsgNoLookups=true']

mainClassName = "gq.luma.bot.Luma"

sourceCompatibility = 11

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://oss.jfrog.org/artifactory/libs-release"}
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven {
        url 'https://repository.apache.org/content/repositories/snapshots/'
    }
    maven { url 'https://jitpack.io' }

}

dependencies {
    implementation project(':common')
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
    //implementation group: 'org.javacord', name: 'javacord-core', version: '3.0.4'
    implementation 'org.javacord:javacord:3.7.0'
    //implementation 'com.github.Joshix-1:Javacord:c5fcba094e'
    implementation 'com.kcthota:emoji4j:6.0'
    implementation group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.7'
    implementation group: 'com.google.apis', name: 'google-api-services-youtube', version: 'v3-rev192-1.23.0'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.9-rc'

    implementation 'com.eclipsesource.minimal-json:minimal-json:0.9.5'

    implementation 'com.github.WalkerKnapp.JSpeedrun:jspeedrun-api:242e3d1b46'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.0'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.11.0'

    implementation 'org.apache.commons:commons-imaging:1.0-SNAPSHOT'
    implementation 'commons-validator:commons-validator:1.7'

    //implementation group: 'org.nanohttpd', name: 'nanohttpd', version: '2.3.1'
    implementation 'io.undertow:undertow-core:2.3.2.Final'
    implementation 'org.pac4j:undertow-pac4j:5.0.1'
    implementation 'org.pac4j:pac4j-oauth:5.7.0'
    implementation 'org.pac4j:pac4j-openid:4.5.7'
    implementation 'org.pac4j:pac4j-oidc:5.7.0'
    
    implementation 'com.lukaspradel:steam-web-api:1.2'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.3'
    implementation group: 'com.github.twitch4j', name: 'twitch4j', version: '1.5.0'

    implementation group: 'org.jsoup', name: 'jsoup', version: '1.11.2'

    implementation 'com.clarifai.clarifai-api2:core:2.4.0'
    implementation group: 'fi.solita.clamav', name: 'clamav-client', version: '1.0.1'

    implementation group: 'net.sourceforge.tess4j', name: 'tess4j', version: '3.4.4'

    implementation("it.unimi.dsi:fastutil:8.5.4")

    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.1.0.202203080745-r'
    implementation 'com.github.seancfoley:ipaddress:5.3.4'
    implementation 'org.kohsuke:github-api:1.313'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    implementation 'dnsjava:dnsjava:3.5.1'
    implementation("com.google.guava:guava:31.1-jre")
}

configurations.each {
    c -> c.resolutionStrategy.dependencySubstitution {
        all { DependencySubstitution dependency ->
            System.out.println(dependency.requested.getDisplayName())
            if (dependency.requested.getDisplayName().contains('com.square.okhttp3')) {
                dependency.useTarget 'com.github.square:okhttp.okhttp:5224f3045b'
            }
        }
    }
}

remotes {
    s1 {
        role 's1'
        host = '10.0.0.230'
        user = 'walker'
        password = Files.readAllLines(file('../deploy_key.txt').toPath()).get(0)
    }
}

task deploy {
    dependsOn(distTar)
    doLast {
        ssh.run {
            session(remotes.s1) {
                System.out.println("Deploying " + distTar.outputs.getFiles().getSingleFile().toPath());
                put from: distTar.outputs.getFiles().getSingleFile(), into: "/home/walker/Luma"
                System.out.println("Finished file upload.")

                execute 'tmux new -d -s luma', ignoreError: true
                execute 'tmux send-keys -t luma C-c'
                execute 'tmux send-keys -t luma "cd /home/walker/Luma" ENTER'
                execute 'tmux send-keys -t luma "tar -xvf server.tar" ENTER'
                execute 'tmux send-keys -t luma "cd server/bin" ENTER'
                execute 'tmux send-keys -t luma "authbind --deep ./server" ENTER'
            }
        }
    }
}
targetCompatibility = JavaVersion.VERSION_11
